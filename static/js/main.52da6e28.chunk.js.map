{"version":3,"sources":["components/action.js","components/fetchPosts.js","reducer/postsReducer.js","components/postPreview.js","components/home.js","components/DropdownCategories.js","constants/index.js","components/posts.js","components/pages.js","components/categoriesPage.js","components/searchPage.js","components/header.js","components/App.js","serviceWorker.js","index.js"],"names":["FETCH_POSTS_PENDING","FETCH_POSTS_SUCCESS","FETCH_POSTS_ERROR","FETCH_PAGES_SUCCESS","FETCH_CATEGORIES_SUCCESS","fetchPostsPending","type","fetchPostsError","error","fetchPosts","url","dispatch","fetch","then","res","json","posts","catch","fetchPages","pages","fetchCategories","categories","initialState","pending","getPosts","state","getPages","getCategories","getPostsPending","getPostsError","PostPreview","index","data","func","str","temp","content","rendered","slice","toString","replace","id","className","dangerouslySetInnerHTML","__html","title","Home","address","map","key","to","DropdownCategories","Dropdown","Item","href","name","appUrl","PostPage","props","isLoading","this","match","params","postsId","Constants","setState","response","React","Component","CodeOfConduct","CategoryPage","catId","SearchPage","categoryUrl","searchQuery","postUrl","length","Body","inputData","shouldComponentRender","bind","updateInput","event","preventDefault","target","value","temp1","DropdownButton","placeholder","onChange","path","component","exact","categoriesPage","connect","bindActionCreators","fetchPostsAction","fetchPagesAction","fetchCategoriesAction","App","Boolean","window","location","hostname","middlewares","thunk","store","createStore","action","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52da6e28.chunk.js","sourcesContent":["export const FETCH_POSTS_PENDING = 'FETCH_POSTS_PENDING';\r\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\r\nexport const FETCH_POSTS_ERROR = 'FETCH_POSTS_ERROR';\r\nexport const FETCH_PAGES_SUCCESS = 'FETCH_PSGES_SUCCESS';\r\nexport const FETCH_CATEGORIES_SUCCESS = 'FETCH_CATEGORIES_SUCCESS';\r\n\r\nexport function fetchPostsPending() {\r\n  return {\r\n    type: FETCH_POSTS_PENDING\r\n  }\r\n}\r\n\r\nexport function fetchPostsSuccess(posts) {\r\n  return {\r\n    type: FETCH_POSTS_SUCCESS,\r\n    posts: posts\r\n  }\r\n}\r\n\r\nexport function fetchPagesSuccess(pages) {\r\n  return {\r\n    type: FETCH_PAGES_SUCCESS,\r\n    pages: pages\r\n  }\r\n}\r\n\r\nexport function fetchCategoriesSuccess(categories) {\r\n  return {\r\n    type: FETCH_CATEGORIES_SUCCESS,\r\n    categories:  categories\r\n  }\r\n}\r\n\r\nexport function fetchPostsError(error) {\r\n  return {\r\n    type: FETCH_POSTS_ERROR,\r\n    error: error\r\n  }\r\n}","import { fetchPostsPending, fetchPostsSuccess, fetchCategoriesSuccess, fetchPagesSuccess, fetchPostsError } from './action.js';\r\n\r\nexport function fetchPosts(url) {\r\n  return dispatch => {\r\n    dispatch(fetchPostsPending());\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.error) {\r\n          throw (res.error);\r\n        }\r\n        dispatch(fetchPostsSuccess(res));\r\n        return res;\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchPostsError(error));\r\n      })\r\n  }\r\n}\r\n\r\nexport function fetchPages(url) {\r\n  return dispatch => {\r\n    dispatch(fetchPostsPending());\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.error) {\r\n          throw (res.error);\r\n        }\r\n        dispatch(fetchPagesSuccess(res));\r\n        return res;\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchPostsError(error));\r\n      })\r\n  }\r\n}\r\n\r\nexport function fetchCategories(url) {\r\n  return dispatch => {\r\n    dispatch(fetchPostsPending());\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.error) {\r\n          throw (res.error);\r\n        }\r\n        dispatch(fetchCategoriesSuccess(res));\r\n        return res;\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchPostsError(error));\r\n      })\r\n  }\r\n}","import { FETCH_POSTS_PENDING, FETCH_POSTS_SUCCESS, FETCH_CATEGORIES_SUCCESS, FETCH_PAGES_SUCCESS, FETCH_POSTS_ERROR } from '../components/action.js';\r\n\r\nexport const initialState = {\r\n  pending: true,\r\n  posts: null,\r\n  pages: null,\r\n  error: null\r\n}\r\n\r\nexport function postsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_POSTS_PENDING:\r\n      return {\r\n        ...state,\r\n        pending: true\r\n      }\r\n    case FETCH_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        posts: action.posts\r\n      }\r\n    case FETCH_PAGES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        pages: action.pages\r\n      }\r\n    case FETCH_CATEGORIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        categories: action.categories\r\n      }\r\n    case FETCH_POSTS_ERROR:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        error: action.error\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getPosts = state => state.posts;\r\nexport const getPages = state => state.pages;\r\nexport const getCategories = state => state.categories;\r\nexport const getPostsPending = state => state.pending;\r\nexport const getPostsError = state => state.error;\r\n","import React from 'react';\r\n\r\nfunction PostPreview({ index, data, func }) {\r\n\r\n  function strip_html_tags(str) {\r\n    if ((str === null) || (str === ''))\r\n      return false;\r\n    else\r\n      str = str.toString();\r\n    return str.replace(/<[^>]*>/g, '');\r\n  }\r\n\r\n  var temp = strip_html_tags(data[index].content.rendered.slice(0, 199));\r\n  temp = [...temp, \".... read more\"];\r\n\r\n  return (\r\n    <div id={\"container\" + index} className=\"container col-sm-5\">\r\n      <div id=\"title-container\">\r\n        <h5 id=\"title-of-post\" dangerouslySetInnerHTML={{ __html: data[index].title.rendered }}></h5>\r\n      </div>\r\n      <hr />\r\n      <p>{temp}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostPreview;","import React from 'react';\r\nimport PostPreview from './postPreview.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = ({ posts, address }) => {\r\n  return (\r\n    <div id=\"content\">\r\n      {posts.map((data, index) => (\r\n        <Link key={index} to={`/${address}=${posts[index].id}`}><PostPreview index={index} data={posts} /></Link>\r\n      ))}\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\nconst DropdownCategories = ({ categories }) => {\r\n  return (\r\n    categories.map((data, index) => (\r\n      <Dropdown.Item key={index} href={`/category=${categories[index].id}/`}>{categories[index].name}</Dropdown.Item>\r\n    ))\r\n  )\r\n}\r\n\r\nexport default DropdownCategories;","export const appUrl = \"https://wpbakery.com/wp-json/wp/v2/\";","import React from 'react';\r\nimport * as Constants from '../constants/index';\r\n\r\nclass PostPage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n      isLoading: false,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var index = this.props.match.params.postsId;\r\n    var url = `${Constants.appUrl}posts/${index}`;\r\n\r\n    this.setState({ isLoading: true });\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(res => this.setState({ data: res, isLoading: false }))\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n\r\n\r\n  render() {\r\n    if(this.state.data !== null){\r\n      return (\r\n        <div id=\"content\">\r\n          <h2 dangerouslySetInnerHTML={{ __html: this.state.data.title.rendered }}></h2>\r\n          <div dangerouslySetInnerHTML={{ __html: this.state.data.content.rendered }}></div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div></div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default PostPage;","import React from 'react';\r\nimport * as Constants from '../constants/index';\r\n\r\nclass CodeOfConduct extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n      isLoading: false,\r\n      error: null,\r\n      index: this.props.index\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var url = `${Constants.appUrl}pages/${this.state.index}`;\r\n\r\n    this.setState({ isLoading: true });\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(res => this.setState({ data: res, isLoading: false }))\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data !== null) {\r\n      return (\r\n        <div id=\"content\">\r\n          <h2 dangerouslySetInnerHTML={{ __html: this.state.data.title.rendered }}></h2>\r\n          <div dangerouslySetInnerHTML={{ __html: this.state.data.content.rendered }}></div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return <div></div>\r\n    }\r\n  }\r\n}\r\n\r\nexport default CodeOfConduct;","import React from 'react';\r\nimport * as Constants from '../constants/index';\r\nimport Home from './home.js';\r\n\r\n\r\nclass CategoryPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: null,\r\n      isLoading: false,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var index = this.props.match.params.catId;\r\n    var url = `${Constants.appUrl}posts?categories=${index}`;\r\n\r\n\r\n    this.setState({ isLoading: true });\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(res => this.setState({ data: res, isLoading: false }))\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n\r\n  render() {\r\n    var temp = `posts`;\r\n\r\n    if (this.state.data !== null) {\r\n      return (\r\n        <div>\r\n          <h4 id=\"content\">{this.state.data.name}</h4>\r\n          {(this.state.data !== null) ? <Home posts={this.state.data} address={temp} /> : \"\"}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div></div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default CategoryPage;\r\n","import React from 'react';\r\nimport * as Constants from '../constants/index';\r\nimport Home from './home';\r\n\r\nclass SearchPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: null,\r\n      categories: null,\r\n      isLoading: false,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var categoryUrl = `${Constants.appUrl}categories?search=${this.props.match.params.searchQuery}`;\r\n    var postUrl = `${Constants.appUrl}posts?search=${this.props.match.params.searchQuery}`;\r\n\r\n    this.setState({ isLoading: true });\r\n    fetch(categoryUrl)\r\n      .then(response => response.json())\r\n      .then(res => this.setState({ categories: res, isLoading: false }))\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n\r\n    this.setState({ isLoading: true });\r\n    fetch(postUrl)\r\n      .then(response => response.json())\r\n      .then(res => this.setState({ posts: res, isLoading: false }))\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n\r\n  render() {\r\n    if (this.state.posts !== null && this.state.categories !== null) {\r\n      return (\r\n        <div>\r\n          <div id=\"content\">\r\n            {(this.state.categories.length === 0) ? <h2>No Category Found.</h2> : <h2>Categories:</h2>}\r\n            {this.state.categories.map((data, index) => (\r\n              <a key={index} href={`/category=${data.id}`}><h4 className=\"category-list\">{data.name}</h4></a>\r\n            ))}\r\n            <h2>Posts:</h2>\r\n          </div>\r\n          {<Home posts={this.state.posts} address=\"posts\" />}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div></div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default SearchPage;","import React from 'react';\r\nimport '../App.css';\r\nimport { DropdownButton } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPosts as fetchPostsAction, fetchPages as fetchPagesAction, fetchCategories as fetchCategoriesAction } from './fetchPosts.js';\r\nimport { getPostsError, getPosts, getPages, getCategories, getPostsPending } from '../reducer/postsReducer.js';\r\nimport { bindActionCreators } from 'redux';\r\nimport { HashRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\nimport Home from './home';\r\nimport DropdownCategories from './DropdownCategories';\r\nimport * as Constants from '../constants/index';\r\nimport PostPage from './posts';\r\nimport Pages from './pages';\r\nimport categoriesPage from './categoriesPage';\r\nimport SearchPage from './searchPage';\r\n\r\nclass Body extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputData: \"\"\r\n    }\r\n    this.shouldComponentRender = this.shouldComponentRender.bind(this);\r\n    this.updateInput = this.updateInput.bind(this);\r\n  }\r\n\r\n  updateInput(event) {\r\n    event.preventDefault();\r\n    this.setState({ inputData: event.target.value })\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { fetchPosts, fetchPages, fetchCategories } = this.props;\r\n    const getPosts = `${Constants.appUrl}posts`;\r\n    const getPages = `${Constants.appUrl}pages`;\r\n    const getCategories = `${Constants.appUrl}categories`;\r\n\r\n    fetchPosts(getPosts);\r\n    fetchPages(getPages);\r\n    fetchCategories(getCategories);\r\n  }\r\n\r\n  shouldComponentRender() {\r\n    const { pending } = this.props;\r\n    if (pending === false) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    var temp, temp1;\r\n    const { posts, pages, categories } = this.props;\r\n    if (this.shouldComponentRender()) {\r\n      return (<div></div>);\r\n    }\r\n\r\n    if (pages !== null) {\r\n      temp = pages[3].id;\r\n      temp1 = pages[5].id;\r\n    }\r\n\r\n    if (posts !== null && pages !== null) {\r\n      return (\r\n        <Router>\r\n          <div>\r\n            <div id=\"header\">\r\n              <div>\r\n                <h1>My blog</h1>\r\n              </div>\r\n              <div id=\"navbar-element\">\r\n                <Link className=\"col-sm-2 navbar-elements\" to={\"/blog\"}><label>Home</label></Link>\r\n                <Link className=\"col-sm-2 navbar-elements\" to={`/page=${temp}`}><label>Terms Of Services</label></Link>\r\n                <Link className=\"col-sm-2 navbar-elements\" to={`/page=${temp1}`}><label>Code Of Conduct</label></Link>\r\n\r\n                <div className=\"col-sm-2 navbar-elements\">\r\n                  <DropdownButton id=\"dropdown-basic-button\" title=\"Categories\">\r\n                    <DropdownCategories categories={categories} />\r\n                  </DropdownButton>\r\n                </div>\r\n                <input className=\"col-sm-2\" id=\"search-bar\" placeholder=\"search\" onChange={this.updateInput}></input>\r\n                <Link id=\"submit-button\" className=\"navbar-elements\" to={`/search=${this.state.inputData}`}><input type=\"submit\"></input></Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Switch>\r\n            <Route path={`/page=${temp}`} component={() => <Pages index={temp} />} />\r\n            <Route path={`/page=${temp1}`} component={() => <Pages index={temp1} />} />\r\n            <Route exact path={\"/\"} component={() => <Home posts={posts} address=\"posts\" />} />\r\n            <Route exact path={\"/blog\"} component={() => <Home posts={posts} address=\"posts\" />} />\r\n            <Route exact path=\"/category=:catId\" component={categoriesPage} />\r\n            <Route exact path=\"/posts=:postsId\" component={PostPage} />\r\n            <Route exact path=\"/search=:searchQuery\" component={SearchPage} />\r\n          </Switch>\r\n        </Router>\r\n      )\r\n    } else {\r\n      return (\r\n        <div></div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  error: getPostsError(state),\r\n  posts: getPosts(state),\r\n  pages: getPages(state),\r\n  categories: getCategories(state),\r\n  pending: getPostsPending(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  fetchPosts: fetchPostsAction,\r\n  fetchPages: fetchPagesAction,\r\n  fetchCategories: fetchCategoriesAction\r\n}, dispatch)\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Body);\r\n\r\n","import React from 'react';\nimport '../App.css';\nimport Header from './header';\n\nfunction App() {\n  return (\n    <Header />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { postsReducer } from './reducer/postsReducer.js';\r\nimport { initialState } from './reducer/postsReducer.js';\r\n\r\nconst middlewares = [thunk];\r\n\r\nlet store = createStore(postsReducer, initialState, applyMiddleware(...middlewares));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}